name: Release Pipeline

on:
  push:
    branches:
      - changeset-release/main
    types: [closed]
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  release:
    if: github.event.pull_request.merged == true && github.head_ref == 'changeset-release/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Setup
      uses: ./.github/actions/setup
      with:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    - name: NX Build All Packages
      run: pnpm run:all:build

    # Points the directory to be published to dist/packages directory.
    - name: Point Packages to dist Directory
      run: sed -e "s|'packages\/|'dist/packages/|" pnpm-workspace.yaml > pnpm-new.yaml && mv pnpm-new.yaml pnpm-workspace.yaml 

    # Exclude root directory from publishing
    - name: Exclude Root Directory
      run: sed -e "s|'./|'\!./|" pnpm-workspace.yaml > pnpm-new.yaml && mv pnpm-new.yaml pnpm-workspace.yaml 

    - name: Publish
      run: npx changeset publish
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}

    - name: Set Version Tag
      id: lib-version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Release Tag
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## CHANGELOG
          Release Version v${{ steps.lib-version.outputs.VERSION }}
        tag_name: v${{ steps.lib-version.outputs.VERSION }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}




