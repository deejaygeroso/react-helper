name: Release Pipeline

on:
  push:
    branches:
      - release

permissions:
  id-token: write
  contents: read

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.0'

    - name: Install pNPM
      run: npm install -g pnpm

    - name: Install Dependencies
      run: pnpm install --frozen-lockfile

    - name: Fetch Main Branch
      run: git fetch origin main

    - name: Create Release Pull Request or Publish to npm
      id: changesets
      uses: changesets/action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

    - name: Check Changeset
      if: steps.changesets.outputs.hasChangesets == 'false'
      # You can do something when a publish should happen.
      run: echo "Has Changeset"

    - name: Check Changeset
      if: steps.changesets.outputs.hasChangesets == 'false'
      # You can do something when a publish should happen.
      run: echo "No Changeset"

    # # If system will detect no packages to be updated.
    # # Pipeline will fail.
    # # Build & Publish will not proceed.
    # - name: Check Changeset Status
    #   run: npx changeset status

    # # Update Version of Packages based on Configured Changeset Version
    # - name: Changeset Version
    #   run: npx changeset version
    # - name: Commit Changeset
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: "Update: Automated Package Version Update"
    #     commit_options: "--no-gpg-sign"
    #     commit_files: "./.changeset/**/*.md"

    # # Build Only the Packages that has changes detected or has its version updated.
    # - name: NX Build Affected Packages
    #   run: pnpm affected:build

    # # Build UI
    - name: NX UI Only
      run: pnpm ui:build:prod

    # Upload dist directory to be reused by publish job.
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  publish:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.0'
        registry-url: 'https://registry.npmjs.org'

    # Download dist directory generated from build job.
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Install pNPM
      run: npm install -g pnpm

    - name: List all packages
      run: ls -la dist

    # - name: Publish packages
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    #   run: |
    #     cd dist/packages
    #     for dir in */; do
    #       (cd "$dir" && pnpm publish --access public)
    #     done

